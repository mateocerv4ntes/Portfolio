---
import fs from "fs";
import path from "path";
import sizeOf from "image-size";
import '../../styles/photo/global.css';
import Header from "../../components/photo/header.astro";

const imagesDir = path.resolve("public/photo/sports");
const images = fs
  .readdirSync(imagesDir)
  .filter(file => /\.(jpe?g|png|webp|gif|avif)$/i.test(file))
  .map(file => {
    // --- START OF CHANGES ---
    
    // 1. Create the full path to the image
    const imagePath = path.join(imagesDir, file);
    
    // 2. Read the file into a buffer
    const imageBuffer = fs.readFileSync(imagePath);
    
    // 3. Pass the buffer (not the path) to sizeOf
    const dimensions = sizeOf(imageBuffer);
    
    // --- END OF CHANGES ---

    return {
      src: `/photo/sports/${file}`,
      alt: file.replace(/\.[^/.]+$/, ""),
      width: dimensions.width,
      height: dimensions.height,
    };
  });
---

<html lang="en">
  <head>
    <link rel="stylesheet" href="https://unpkg.com/photoswipe@5/dist/photoswipe.css">

    <style>
      body {
        margin: 0;
        font-size: 1.2rem;
        font-family: 'Chivo Mono', monospace;
        background: #fafafa;
      }

      header {
        font-family: 'Chivo Mono', monospace;
        display: flex;
        justify-content: flex-start;
        font-weight: 600;
        font-size: 3rem;
        color: #1b1d35;
        margin: 2.5rem;
      }

      .grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        padding: 2.5rem;
        max-width: 1624px;
      }

      /* 5. UPDATED CSS to target the <a> tag as the flex item */
      .grid a {
        display: block; /* Make the link a block-level item */
        max-height: 324px;
        flex-grow: 1;
        cursor: pointer;
        transition: transform 0.2s ease;
        background: #222;
        line-height: 0; /* Remove potential whitespace */
      }
      
      .grid a:hover {
        transform: scale(1.02);
      }
      
      /* The <img> inside the <a> should fill it */
      .grid a img {
        height: 100%;
        width: 100%;
        object-fit: cover;
        user-select: none;
        -webkit-user-drag: none;
        display: block;
      }

      /* 6. REMOVED old .lightbox CSS */
    </style>
  </head>

  <body>
    <Header />

    <header>Sports</header>

    <div class="grid pswp-gallery" id="my-gallery">
          {images.map((img) => (
            <a
              href={img.src}
              data-pswp-width={img.width}
              data-pswp-height={img.height}
              target="_blank"
              style={`aspect-ratio: ${img.width} / ${img.height};`}
            >
              <img src={img.src} alt={img.alt} />
            </a>
          ))}
    </div>

    <script type="module">
      import PhotoSwipeLightbox from 'https://unpkg.com/photoswipe@5/dist/photoswipe-lightbox.esm.js';

      const lightbox = new PhotoSwipeLightbox({
        // The gallery's main DOM element
        gallery: '#my-gallery',

        // The selector for child items (the <a> tags)
        children: 'a',

        // Tell PhotoSwipe how to get the data from the <a> tag
        // (it reads href, data-pswp-width, and data-pswp-height automatically)
        
        // Dynamically import the core PhotoSwipe module
        pswpModule: () => import('https://unpkg.com/photoswipe@5/dist/photoswipe.esm.js'),
      });

      // Initialize the lightbox
      lightbox.init();
    </script>
    
    </body>
</html>